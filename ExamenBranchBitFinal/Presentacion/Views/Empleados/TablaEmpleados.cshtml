@model List<Entidades.empleados>

<div class="row" style="text-align:right;padding:5px">
    <a href="~/Empleados/Create" class="btn btn-primary">Agregar</a>
</div>
<div class="row">
    <div class="col-md-12">
        <table class="table table-dark table-hover" id="tablaEmpleados">
            <tr>
                <td>
                    Numero de Empleado
                </td>
                <td>
                    Nombre
                </td>
                <td>
                    Correo
                </td>
                <td>
                    Estatus
                </td>
                <td>
                    Fecha de Creacion
                </td>
            </tr>
            @{
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <span id="Id">@Html.DisplayFor(m => item.numEmp)</span>
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.nombre)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.correo)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.estatus)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.fechaCreacion)
                        </td>
                        <td>
                            <input id="iModal" type="button" onclick="ModalEmpleados()" value="Detalles" class="btn btn-default" />
                            <a class="btn btn-warning" href="~/Empleados/Edit/@item.numEmp">Editar</a>
                            <a class="btn btn-danger" href="~/Empleados/Delete/@item.numEmp">Eliminar</a>
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
</div>

<div class="modal" id="ModEmpleado" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Encabezado Modal -->
            <div class="modal-header">
                <h4 class="modal-title">Datos del Empleado</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Curepo de la Modal -->
            <div class="modal-body" id="modalBody">

            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
            </div>

        </div>
    </div>
</div>
<script>
    function ModalEmpleados() {
        var id = $("#Id").text();
        var urlWS = "/Empleados/_DatosEmpleado/" + id;
        LlamadaAjaxGet(urlWS, MuestraDatosEmpleado);
    }
    function ModalDelEmpleados() {
        var id = $("#Id").text();
        var urlWS = "/Empleados/eliminarEmpleado/" + id;
        LlamadaAjaxGet(urlWS, MuestraDatosEmpleado);
    }
    function LlamadaAjaxGet(url, funcionExito) {
        $.ajax({
            type: 'GET',
            url: url,
            data: {},
            contentType: "application/json; charset = utf - 8",
            dataType: "html",
            success: funcionExito,
            error: errorGenerico
        });
    }
    function LlamaAjaxGet(url, funcionExito) {
        $.ajax({
            type: 'GET',
            url: url,
            contentType: "application/json; charset = utf - 8",
            dataType: "json",
            success: funcionExito,
            error: errorGenerico
        });
    }
    function MuestraDatosEmpleado(data) {
        try {
            if (data != null) {
                $("#modalBody").html(data);
                $("#ModEmpleado").modal();
            } else {
                alert('La pagina Web no puede responder a tu peticion')
            }
        } catch (ex) {
            alumno = [];
            alert('No se pudo guardar los datos');
        }
    }
        function funcExito(resultado, estatus, jqXHR) {
            var oRespuesta;
            try {
                oRespuesta = JSON.parse(resultado.d);
                if (oRespuesta != null) {
                    if (oRespuesta.Mensaje == "Exito") {
                        alert('Transacción efectuada con éxito');
                    }
                    else {
                        alert(oRespuesta.Mensaje);
                    }
                }
                else {
                    alert('La respuesta recibida del Web Service es incorrecta ' + resultado.d);
                }
            }
            catch (ex) {
                alert('Error al recibir los datos');
            }


        }
        function errorGenerico(jqXHR, estatus, error) {
            var msg = '';
            if (jqXHR.status === 0) {
                msg = 'No está conectado, favor de verificar su conexión.';
            }
            else if (jqXHR.status === 404) {
                msg = 'Página no encontrada [404]';
            }
            else if (jqXHR.status === 500) {
                msg = 'Error no hay conexión al servidor [500]';
            }
            else if (jqXHR.status === 'parseerror') {
                msg = 'El parseo del JSON es erróneo.';
            }
            else if (jqXHR.status === 'timeout') {
                $('body').addClass('loaded');
            }
            else if (jqXHR.status === 'abort') {
                msg = 'La petición Ajax fue abortada.';
            }
            else {
                msg = 'Error no conocido. ';
                console.log(exception);
            }
            alert(msg);
        }
</script>
